from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.user_group import UserGroup
from openapi_server import util

from openapi_server.models.user_group import UserGroup  # noqa: E501

class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group=None, email=None, name=None, id=None):  # noqa: E501
        """User - a model defined in OpenAPI

        :param group: The group of this User.  # noqa: E501
        :type group: UserGroup
        :param email: The email of this User.  # noqa: E501
        :type email: str
        :param name: The name of this User.  # noqa: E501
        :type name: str
        :param id: The id of this User.  # noqa: E501
        :type id: str
        """
        self.openapi_types = {
            'group': UserGroup,
            'email': str,
            'name': str,
            'id': str
        }

        self.attribute_map = {
            'group': 'group',
            'email': 'email',
            'name': 'name',
            'id': 'id'
        }

        self._group = group
        self._email = email
        self._name = name
        self._id = id

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group(self) -> UserGroup:
        """Gets the group of this User.


        :return: The group of this User.
        :rtype: UserGroup
        """
        return self._group

    @group.setter
    def group(self, group: UserGroup):
        """Sets the group of this User.


        :param group: The group of this User.
        :type group: UserGroup
        """

        self._group = group

    @property
    def email(self) -> str:
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def name(self) -> str:
        """Gets the name of this User.


        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this User.


        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def id(self) -> str:
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: str
        """

        self._id = id
