openapi: 3.0.0
info:
  description: API-prototype
  title: API-prototype
  version: 1.0-oas3
servers:
- url: /
paths:
  /auth:
    post:
      operationId: get_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful operation
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: No user with such email
        403:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid email/password
        500:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        501:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Wrong request
      summary: Get access token for the user
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users:
    get:
      operationId: list_users
      parameters:
      - description: Page number of results to return. Starting from 1. Default 1.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of items on page. Default 30.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: Successful operation
        401:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: No user token
        403:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Operation is not permitted for the user
        500:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        501:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Wrong request
      security:
      - JWTBearer: []
      summary: List all users
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUserResponse'
          description: Successful operation
        401:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: No user token
        403:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Operation is not permitted for the user
        500:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        501:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Wrong request
      security:
      - JWTBearer: []
      summary: Create a user
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{userId}:
    delete:
      operationId: delete_user
      parameters:
      - description: The id of the user to delete
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful operation
        401:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: No user token
        403:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Operation is not permitted for the user
        500:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        501:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Wrong request
      security:
      - JWTBearer: []
      summary: Delete the user
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    get:
      operationId: get_user
      parameters:
      - description: The id of the user to retrieve
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful operation
        401:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: No user token
        403:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Operation is not permitted for the user
        500:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        501:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Wrong request
      security:
      - JWTBearer: []
      summary: Get info for a specific user
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    put:
      operationId: update_user
      parameters:
      - description: The id of the user to update
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful operation
        401:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: No user token
        403:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Operation is not permitted for the user
        500:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        501:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: Wrong request
      security:
      - JWTBearer: []
      summary: Update details of particular user
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
components:
  responses:
    401:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: No user token
    403:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: Operation is not permitted for the user
    500:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    501:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: Wrong request
  schemas:
    UserCredentials:
      example:
        password: password
        email: email
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    Token:
      example:
        token: token
      properties:
        token:
          description: User jwt token
          type: string
      type: object
    Users:
      items:
        $ref: '#/components/schemas/UserShort'
      type: array
    UserShort:
      example:
        name: name
        email: email
      properties:
        group:
          $ref: '#/components/schemas/UserGroup'
        email:
          type: string
        name:
          type: string
      type: object
    UpdateUser:
      example:
        name: name
        email: email
      properties:
        group:
          $ref: '#/components/schemas/UserGroup'
        email:
          type: string
        name:
          type: string
      type: object
    NewUser:
      $ref: '#/components/schemas/UpdateUser'
    User:
      allOf:
      - $ref: '#/components/schemas/UpdateUser'
      - properties:
          id:
            type: string
        type: object
    UserGroup:
      enum:
      - admin
      - full
      - guest
      type: string
    NewUserResponse:
      example:
        id: id
      properties:
        id:
          description: ID of the created user
          type: string
      required:
      - id
      type: object
    Empty:
      type: object
    Error:
      properties:
        status:
          description: error message
          type: string
      type: object
  securitySchemes:
    JWTBearer:
      description: JWT from /auth request
      in: header
      name: Authorization
      type: apiKey
      x-apikeyInfoFunc: openapi_server.apikey_fake.check_token
