---
swagger: "2.0"
info:
  description: "compbiowebAPI"
  version: "1.0"
  title: "compbiowebAPI"
schemes:
- "https"
paths:
  /:
    get:
      tags:
      - "compbioweb"
      description: "HTML web page containing API usage information"
      operationId: "show_description"
      consumes:
      - "application/json"
      produces:
      - "text/html"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          headers:
            Content-Type:
              type: "string"
              description: "Media type of request"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "'text/html'"
            responseTemplates:
              text/html: "<html>\n    <head>\n        <style>\n        body {\n  \
                \          color: #333;\n            font-family: Sans-serif;\n  \
                \          max-width: 800px;\n            margin: auto;\n        }\n\
                \        </style>\n    </head>\n    <body>\n        <h1>compbioweb\
                \ API</h1>\n        <p>\n          <code>compbio</code>'s API for\
                \ web-application.\n        </p>\n        <pre>\n{\n    \"user\" :\
                \ \"John\",\n    \"email\" : \"john@\"\n}\n        </pre>\n    </body>\n\
                </html>"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
      x-swagger-router-controller: "swagger_server.controllers.compbioweb_controller"
  /users:
    get:
      tags:
      - "users"
      summary: "List all users"
      operationId: "list_users"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "query"
        description: "The type of user to retrieve"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number of results to return."
        required: false
        type: "string"
      - name: "per_page"
        in: "query"
        description: "Number of items on page."
        required: false
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Users"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
              description: "URI that may access the resource"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.querystring.page: "method.request.querystring.page"
          integration.request.querystring.type: "method.request.querystring.type"
        uri: "http://compbiowebapi.com/webapi/users"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
    post:
      tags:
      - "users"
      summary: "Create a user"
      operationId: "create_user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "NewUser"
        required: true
        schema:
          $ref: "#/definitions/NewUser"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/NewUserResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
              description: "URI that may access the resource"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        uri: "http://compbiowebapi.com/webapi/users"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
  /users/{userId}:
    get:
      tags:
      - "users"
      summary: "Info for a specific user"
      operationId: "get_user"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id of the user to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/User"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
              description: "URI that may access the resource"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.userId: "method.request.path.userId"
        uri: "http://compbiowebapi.com/webapi/users/{userId}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
    delete:
      tags:
      - "users"
      summary: "Delete the user"
      operationId: "delete_user"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id of the user to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
              description: "URI that may access the resource"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.userId: "method.request.path.userId"
        uri: "http://compbiowebapi.com/webapi/users/{userId}"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
      x-swagger-router-controller: "swagger_server.controllers.users_controller"
definitions:
  Users:
    type: "array"
    items:
      $ref: "#/definitions/User"
  Empty:
    type: "object"
  NewUserResponse:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/User"
      message:
        type: "string"
    example:
      message: "message"
      user:
        name: "name"
        id: "id"
        type: "type"
        email: "email"
  User:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
      email:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
      type: "type"
      email: "email"
  NewUser:
    type: "object"
    properties:
      type:
        $ref: "#/definitions/UserType"
      email:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      type: {}
      email: "email"
  UserType:
    type: "string"
    enum:
    - "admin"
    - "user"
    - "collaborator"
x-amazon-apigateway-documentation:
  version: "v2.1"
  createdDate: "2018-11-09T07:03:59Z"
  documentationParts:
  - location:
      type: "API"
    properties:
      info:
        description: "compbioweb API"
  - location:
      type: "METHOD"
      method: "GET"
    properties:
      tags:
      - "compbioweb"
      description: "compbioweb HTML web page containing API usage information"
  - location:
      type: "METHOD"
      path: "/users/{userId}"
      method: "GET"
    properties:
      tags:
      - "compbioweb"
      summary: "Info for a specific user"
  - location:
      type: "METHOD"
      path: "/users"
      method: "GET"
    properties:
      tags:
      - "compbioweb"
      summary: "List all users"
  - location:
      type: "METHOD"
      path: "/users"
      method: "POST"
    properties:
      tags:
      - "compbioweb"
      summary: "Create a user"
  - location:
      type: "PATH_PARAMETER"
      path: "/users/{userId}"
      method: "*"
      name: "userId"
    properties:
      description: "The id of the user to retrieve"
  - location:
      type: "QUERY_PARAMETER"
      path: "/users"
      method: "GET"
      name: "page"
    properties:
      description: "Page number of results to return."
  - location:
      type: "QUERY_PARAMETER"
      path: "/users"
      method: "GET"
      name: "type"
    properties:
      description: "The type of user to retrieve"
  - location:
      type: "REQUEST_BODY"
      path: "/users"
      method: "POST"
    properties:
      description: "User object that needs to be added"
  - location:
      type: "RESPONSE"
      method: "*"
      statusCode: "200"
    properties:
      description: "Successful operation"
  - location:
      type: "RESPONSE_HEADER"
      method: "OPTIONS"
      statusCode: "200"
      name: "Access-Control-Allow-Headers"
    properties:
      description: "Used in response to a preflight request to indicate which HTTP\
        \ headers can be used when making the request."
  - location:
      type: "RESPONSE_HEADER"
      method: "OPTIONS"
      statusCode: "200"
      name: "Access-Control-Allow-Methods"
    properties:
      description: "Method or methods allowed when accessing the resource"
  - location:
      type: "RESPONSE_HEADER"
      method: "*"
      statusCode: "200"
      name: "Access-Control-Allow-Origin"
    properties:
      description: "URI that may access the resource"
  - location:
      type: "RESPONSE_HEADER"
      method: "GET"
      statusCode: "200"
      name: "Content-Type"
    properties:
      description: "Media type of request"
